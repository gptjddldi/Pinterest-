[{"C:\\1234\\Pinterest\\frontend\\src\\pages\\Home.js":"1","C:\\1234\\Pinterest\\frontend\\src\\components\\PostList.js":"2","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\login.js":"3","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\signup.js":"4","C:\\1234\\Pinterest\\frontend\\src\\index.js":"5","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\index.js":"6","C:\\1234\\Pinterest\\frontend\\src\\actions\\types.js":"7","C:\\1234\\Pinterest\\frontend\\src\\actions\\userAction.js":"8","C:\\1234\\Pinterest\\frontend\\src\\reducers\\userReducer.js":"9","C:\\1234\\Pinterest\\frontend\\src\\store.js":"10","C:\\1234\\Pinterest\\frontend\\src\\pages\\index.js":"11","C:\\1234\\Pinterest\\frontend\\src\\reducers\\index.js":"12","C:\\1234\\Pinterest\\frontend\\src\\components\\routings\\LoginRequiredRouter.js":"13","C:\\1234\\Pinterest\\frontend\\src\\pages\\CssTest.js":"14","C:\\1234\\Pinterest\\frontend\\src\\components\\PinCard.js":"15","C:\\1234\\Pinterest\\frontend\\src\\components\\Layout.js":"16","C:\\1234\\Pinterest\\frontend\\src\\components\\Header.js":"17","C:\\1234\\Pinterest\\frontend\\src\\pages\\Following.js":"18","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\account_settings.js":"19","C:\\1234\\Pinterest\\frontend\\src\\pages\\profile.js":"20","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\edit_profile.js":"21","C:\\1234\\Pinterest\\frontend\\src\\components\\Modal.js":"22","C:\\1234\\Pinterest\\frontend\\src\\utils\\useOnClickOutside.js":"23","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pin.js":"24","C:\\1234\\Pinterest\\frontend\\src\\components\\Tab.js":"25","C:\\1234\\Pinterest\\frontend\\src\\components\\UserSignature.js":"26","C:\\1234\\Pinterest\\frontend\\src\\components\\ProfilePicture.js":"27","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pinCreate.js":"28","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\index.js":"29","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\PrimaryButton.js":"30","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\SecondaryButton.js":"31","C:\\1234\\Pinterest\\frontend\\src\\utils\\axios.js":"32","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\BaseButton.js":"33","C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\BaseAlert.js":"34","C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\WarnAlert.js":"35","C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\OKAlert.js":"36","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowingList\\FollowingTagModal.js":"37","C:\\1234\\Pinterest\\frontend\\src\\components\\PinDelete.js":"38","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardButton.js":"39","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton\\FollowUserButton.js":"40","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton\\FollowTagButton.js":"41","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\Board.js":"42","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardCreateModal.js":"43","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowingList\\FollowingUserModal.js":"44","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardsFeed.js":"45"},{"size":1128,"mtime":1614166128605,"results":"46","hashOfConfig":"47"},{"size":3727,"mtime":1617254379045,"results":"48","hashOfConfig":"47"},{"size":5118,"mtime":1617083567019,"results":"49","hashOfConfig":"47"},{"size":6435,"mtime":1617087426253,"results":"50","hashOfConfig":"47"},{"size":756,"mtime":1613479609890,"results":"51","hashOfConfig":"47"},{"size":385,"mtime":1617087425706,"results":"52","hashOfConfig":"47"},{"size":156,"mtime":1614738995534,"results":"53","hashOfConfig":"47"},{"size":300,"mtime":1614739703378,"results":"54","hashOfConfig":"47"},{"size":1271,"mtime":1614740216817,"results":"55","hashOfConfig":"47"},{"size":732,"mtime":1613479638803,"results":"56","hashOfConfig":"47"},{"size":1395,"mtime":1614741311710,"results":"57","hashOfConfig":"47"},{"size":170,"mtime":1610083886109,"results":"58","hashOfConfig":"47"},{"size":564,"mtime":1613968897581,"results":"59","hashOfConfig":"47"},{"size":1254,"mtime":1615560791100,"results":"60","hashOfConfig":"47"},{"size":1057,"mtime":1617083251004,"results":"61","hashOfConfig":"47"},{"size":282,"mtime":1613464899800,"results":"62","hashOfConfig":"47"},{"size":4146,"mtime":1613967316878,"results":"63","hashOfConfig":"47"},{"size":1406,"mtime":1617071362371,"results":"64","hashOfConfig":"47"},{"size":3550,"mtime":1617087425586,"results":"65","hashOfConfig":"47"},{"size":4146,"mtime":1617089142154,"results":"66","hashOfConfig":"47"},{"size":3940,"mtime":1615870444419,"results":"67","hashOfConfig":"47"},{"size":1101,"mtime":1612421034754,"results":"68","hashOfConfig":"47"},{"size":759,"mtime":1612420981325,"results":"69","hashOfConfig":"47"},{"size":3066,"mtime":1617253414041,"results":"70","hashOfConfig":"47"},{"size":674,"mtime":1617083400175,"results":"71","hashOfConfig":"47"},{"size":408,"mtime":1617081088521,"results":"72","hashOfConfig":"47"},{"size":1056,"mtime":1611564430401,"results":"73","hashOfConfig":"47"},{"size":4512,"mtime":1617091196397,"results":"74","hashOfConfig":"47"},{"size":448,"mtime":1617087426590,"results":"75","hashOfConfig":"47"},{"size":314,"mtime":1613622851389,"results":"76","hashOfConfig":"47"},{"size":318,"mtime":1613623216563,"results":"77","hashOfConfig":"47"},{"size":453,"mtime":1614166145681,"results":"78","hashOfConfig":"47"},{"size":387,"mtime":1613622426272,"results":"79","hashOfConfig":"47"},{"size":794,"mtime":1614756492662,"results":"80","hashOfConfig":"47"},{"size":278,"mtime":1614755593284,"results":"81","hashOfConfig":"47"},{"size":279,"mtime":1614756581907,"results":"82","hashOfConfig":"47"},{"size":1847,"mtime":1617082896869,"results":"83","hashOfConfig":"47"},{"size":467,"mtime":1617087494843,"results":"84","hashOfConfig":"47"},{"size":2870,"mtime":1617082504991,"results":"85","hashOfConfig":"47"},{"size":2392,"mtime":1617082663081,"results":"86","hashOfConfig":"47"},{"size":1023,"mtime":1617082853491,"results":"87","hashOfConfig":"47"},{"size":518,"mtime":1617087426045,"results":"88","hashOfConfig":"47"},{"size":1719,"mtime":1617091911302,"results":"89","hashOfConfig":"47"},{"size":1922,"mtime":1617082896884,"results":"90","hashOfConfig":"47"},{"size":875,"mtime":1617087426614,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"qfzmud",{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"127"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"127"},"C:\\1234\\Pinterest\\frontend\\src\\pages\\Home.js",[],["208","209"],"C:\\1234\\Pinterest\\frontend\\src\\components\\PostList.js",["210","211"],"import React, {useEffect, useState} from 'react'\r\nimport PinCard from \"./PinCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\nimport {cursor} from \"../actions/userAction\";\r\nimport SecondaryButton from \"./Button/SecondaryButton\";\r\nimport Masonry from \"react-masonry-css\";\r\n// react-masonry-css: pinterest 스타일 layout 느낌\r\n\r\nconst PostList = ({filter, url}) => {\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user\r\n    }))\r\n    const [postList, setPostList] = useState([])\r\n    const [nextCursor, setNextCursor] = useState('')\r\n    const [prevCursor, setPrevCursor] = useState('')\r\n    const curCursor = useSelector(state => ({\r\n        curCursor: state.userReducer.cursor\r\n    }))\r\n    const dispatch = useDispatch()\r\n    const onCursor = (data) => dispatch(cursor(data));\r\n\r\n    const initFeed = async(cursorTo) => {\r\n        let res\r\n        try{\r\n            if(url){\r\n                res = await axiosInstance.get(`pins/${url}?`)\r\n\r\n            }\r\n            else if(filter){\r\n                res = await axiosInstance.get(`pins/?${filter}`)\r\n\r\n            }\r\n            else if(cursorTo){\r\n                res = await axiosInstance.get(cursorTo)\r\n            }\r\n            else{\r\n                res = await axiosInstance.get(`pins/`)\r\n            }\r\n            setNextCursor(res.data.next)\r\n            setPrevCursor(res.data.previous)\r\n            if(res.data.results) setPostList(res.data.results)\r\n            else setPostList(res.data)\r\n        }\r\n        catch(e) {\r\n            console.log(e);\r\n\r\n        }\r\n    }\r\n    const [boards, setBoards] = useState()\r\n    useEffect(()=> {\r\n\r\n        axiosInstance(`boards?author__username=${loggedUser.username}`).then((res) => setBoards(res.data))\r\n            .catch((e) => console.log(e));\r\n    }, [])\r\n    useEffect(()=>{\r\n        initFeed(curCursor.curCursor)\r\n    }, [])\r\n\r\n\r\n\r\n    const fetchFeed = async(cursorTo) => {\r\n        axiosInstance.get(`${cursorTo}`)\r\n            .then((res) => {\r\n                setNextCursor(res.data.next)\r\n                setPrevCursor(res.data.previous)\r\n\r\n                setPostList(res.data.results)\r\n            })\r\n            .catch((err)=>console.log(err))\r\n        scrollToTop()\r\n        onCursor(cursorTo)\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"auto\"\r\n        })\r\n    }\r\n\r\n    const RenderItems = () => {\r\n        return(\r\n            <Masonry\r\n                breakpointCols={{default: 5, 1280: 4, 1024: 3, 768: 2, 640: 1}}\r\n                className=\"container mx-auto flex\"\r\n                columnClassName=\"mx-2\"\r\n            >\r\n                {postList.map((pin, index) =>\r\n                    <PinCard className=\"my-10\" pin={pin} boards={boards} key={index}/>\r\n                )}\r\n            </Masonry>\r\n        )}\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                {postList ? <RenderItems/> : <div>로딩중</div> }\r\n            </div>\r\n            <div className=\" fixed right-0 bottom-0 mb-5 mr-5 flex z-10\">\r\n                {prevCursor ? <>\r\n                        <SecondaryButton className=\"px-4 py-2 rounded-3xl ml-auto \" onClick={() =>fetchFeed(prevCursor)}>이전</SecondaryButton>\r\n                        <SecondaryButton className=\"px-4 py-2 rounded-3xl ml-auto \" onClick={() => fetchFeed(nextCursor)}>다음</SecondaryButton></>\r\n                    :\r\n                    <SecondaryButton className=\"px-4 py-2 rounded-3xl ml-auto\" onClick={() => fetchFeed(nextCursor)}>다음</SecondaryButton>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(PostList)",["212","213"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\login.js",["214","215"],"import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/userAction\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\nimport {notification} from \"antd\";\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const dispatch = useDispatch()\r\n    const onLogin = (data) => dispatch(login(data));\r\n\r\n    const {from: loginRedirectUrl} = location.state || {from: {pathname: \"/\"}}\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const Login = async(e) => {\r\n        e.preventDefault()\r\n        const data = {email, password}\r\n        try{\r\n            const res = await axiosInstance.post('rest-auth/login/', data)\r\n            onLogin(res.data);\r\n            notification.open({\r\n                message:\"로그인 성공.\"\r\n            })\r\n            history.push(loginRedirectUrl)\r\n            window.location.reload()\r\n        }\r\n        catch(error) {\r\n            const {data: ErrorMessages} = error.response\r\n            notification.open({\r\n                message: \"로그인 실패\",\r\n                description: Object.entries(ErrorMessages).reduce(\r\n                    (acc,[fieldName, err]) => {\r\n                        acc += err\r\n                        console.log(acc)\r\n                        return acc\r\n                    }\r\n                ),\r\n            })\r\n\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"bg-white h-screen w-full flex flex-wrap\">\r\n\r\n            <div className=\"w-full md:w-1/2 flex flex-col\">\r\n\r\n                <div className=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\">\r\n                    <svg className=\"text-red-500\" height=\"32\" width=\"32\" viewBox=\"0 0 24 24\" aria-label=\"Pinterest logo\">\r\n                        <path\r\n                            d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\">\r\n                        </path>\r\n                    </svg>\r\n                    <div className={\"font-bold text-lg text-red-500\"}>Pinterest</div>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                    <p className=\"text-center text-3xl\">환영합니다. Pinterest Clone Page 입니다.</p>\r\n                    <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={Login}>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"email\" className=\"text-lg\">이메일</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" aria-label=\"email\" value={email} required\r\n                                   onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"password\" className=\"text-lg\">비밀번호</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"password\" id=\"password\" placeholder=\"비밀번호를 입력하세요.\" value={password} arial-label=\"password\"\r\n                                   onChange={(e)=>setPassword(e.target.value)}\r\n                                   required/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" value=\"로그인\" className=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\"/>\r\n                    </form>\r\n                    <div className=\"text-center pt-12 pb-12\">\r\n                        <p className=\"hover:text-red-500 cursor-pointer\" onClick={()=> props.toSignupClick()}>아직 Pinterest 를 사용하고 있지 않으신가요? 가입하기</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"w-1/2 shadow-2xl\">\r\n                <img className=\"object-cover w-full h-screen hidden md:block\" src=\"https://source.unsplash.com/IXUM4cJynP0\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;",["216","217"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\signup.js",["218","219","220"],"import React, {useState} from 'react'\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\nimport {notification} from \"antd\";\r\n\r\n\r\nexport default function Signup(props) {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n\r\n    const Signup = async(e) => {\r\n        e.preventDefault()\r\n        const data = {email, username, password1, password2}\r\n        try{\r\n            const res = await axiosInstance.post('rest-auth/registration/', data)\r\n            console.log(res.data)\r\n            notification.open({\r\n                message: \"회원가입 되었습니다.\",\r\n                description: \"로그인해주세요.\",\r\n            })\r\n            props.toLoginClick()\r\n        }\r\n        catch (error) {\r\n            console.log(error.response)\r\n            const {data: ErrorMessages} = error.response\r\n            notification.open({\r\n                message: \"회원가입 실패\",\r\n                description: Object.entries(ErrorMessages).reduce(\r\n                    (acc,[fieldName, err]) => {\r\n                        acc += err\r\n                        console.log(acc)\r\n                        return acc\r\n                    }\r\n                ),\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"w-full flex flex-wrap bg-white h-screen\">\r\n\r\n            <div className=\"w-full md:w-1/2 flex flex-col\">\r\n\r\n                <div className=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\">\r\n                    <svg className=\"text-red-500\" height=\"32\" width=\"32\" viewBox=\"0 0 24 24\" aria-label=\"Pinterest logo\">\r\n                        <path\r\n                            d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\">\r\n                        </path>\r\n                    </svg>\r\n                    <div className={\"font-bold text-lg text-red-500\"}>Pinterest</div>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                    <p className=\"text-center text-3xl\">회원가입 페이지 입니다.</p>\r\n                    <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={Signup}>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"email\" className=\"text-lg\">이메일</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" aria-label=\"email\" value={email} required\r\n                                   onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"username\" className=\"text-lg\">사용자 이름</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"username\" id=\"username\" placeholder=\"사용자 이름을 입력해주세요.\" value={username} arial-label=\"username\"\r\n                                onChange={(e)=>setUsername(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"password\" className=\"text-lg\">비밀번호</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"password\" id=\"password\" placeholder=\"비밀번호를 입력하세요.\" value={password1}\r\n                                arial-label=\"password\"\r\n                                onChange={(e) => setPassword1(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"password\" className=\"text-lg\">비밀번호 확인</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"password\" id=\"password\" placeholder=\"비밀번호를 다시 입력해주세요.\" value={password2}\r\n                                arial-label=\"password\"\r\n                                onChange={(e) => setPassword2(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" value=\"회원가입\" className=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\"/>\r\n                    </form>\r\n                    <div className=\"text-center pt-12 pb-12\">\r\n                        <p className=\"hover:text-red-500 cursor-pointer\" onClick={()=> props.toLoginClick()}>이미 Pinterest의 계정이 있으신가요?</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"w-1/2 shadow-2xl\">\r\n                <img className=\"object-cover w-full h-screen hidden md:block\" src=\"https://source.unsplash.com/IXUM4cJynP0\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",["221","222"],"C:\\1234\\Pinterest\\frontend\\src\\index.js",["223","224","225"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\"\nimport {BrowserRouter} from \"react-router-dom\";\nimport Root from \"./pages\";\nimport {createStore} from \"redux\";\nimport RootReducer from \"./reducers\";\nimport {Provider} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport configureStore from './store'\n\nconst {store, persistor} = configureStore()\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <Provider store={store} >\n          <PersistGate loading={null} persistor={persistor}>\n              <Root />\n          </PersistGate>\n      </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\index.js",[],"C:\\1234\\Pinterest\\frontend\\src\\actions\\types.js",[],["226","227"],"C:\\1234\\Pinterest\\frontend\\src\\actions\\userAction.js",["228"],"C:\\1234\\Pinterest\\frontend\\src\\reducers\\userReducer.js",["229","230","231"],"import {login, logout} from \"../actions/userAction\";\r\nimport {CURSOR, LOGIN, LOGOUT, UPDATE} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n    token: '',\r\n    user: {},\r\n    isAuth: false,\r\n    cursor: '',\r\n}\r\n\r\n\r\nexport default function(state=defaultState, action){\r\n    switch (action.type){\r\n        case LOGIN:{\r\n            const {payload:data} = action\r\n            return{\r\n                ...state,\r\n                token: data.token,\r\n                user: data.user,\r\n                isAuth: true,\r\n                cursor: '',\r\n\r\n            }\r\n        }\r\n        case UPDATE:{\r\n            const {payload:data} = action\r\n            return{\r\n                ...state,\r\n                user: data,\r\n                isAuth:true,\r\n                cursor: '',\r\n\r\n            }\r\n        }\r\n        case LOGOUT:{\r\n            return {\r\n                ...state,\r\n                token: '',\r\n                user: '',\r\n                isAuth: false,\r\n                cursor: '',\r\n\r\n            }\r\n        }\r\n        case CURSOR:{\r\n            const {payload:data} = action\r\n            console.log(data)\r\n            return{\r\n                ...state,\r\n                cursor: data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}",["232","233"],"C:\\1234\\Pinterest\\frontend\\src\\store.js",["234","235"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\index.js",["236","237"],"C:\\1234\\Pinterest\\frontend\\src\\reducers\\index.js",[],["238","239"],"C:\\1234\\Pinterest\\frontend\\src\\components\\routings\\LoginRequiredRouter.js",[],"C:\\1234\\Pinterest\\frontend\\src\\pages\\CssTest.js",["240","241","242"],"import React, {useEffect, useState} from 'react'\r\nimport WarnAlert from \"../components/Alert/WarnAlert\";\r\nimport OKAlert from \"../components/Alert/OKAlert\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport PinCard from \"../components/PinCard\";\r\n\r\nconst CssTest = (props) => {\r\n    const [postList, setPostList] = useState([])\r\n    const initFeed = async(cursorTo) => {\r\n        console.log(\"로딩중..\")\r\n        const data = await axiosInstance.get('/pins/13/sim_pin_list/')\r\n            .then((res) => (setPostList(res.data))).catch((err)=>console.log(err))\r\n        console.log(\"완료!\")\r\n    }\r\n    useEffect(()=>{\r\n        initFeed()\r\n    }, [])\r\n    const RenderItems = () => {\r\n        return(\r\n        <Masonry\r\n            breakpointCols={{default: 5, 1280: 4, 1024: 3, 768: 2, 640: 1}}\r\n            className=\"container mx-auto flex\"\r\n            columnClassName=\"mx-2\"\r\n        >\r\n            {postList.map((pin, index) =>\r\n                <PinCard className=\"my-10\" pin={pin} key={index}/>\r\n            )}\r\n        </Masonry>\r\n    )}\r\n    return(\r\n\r\n        <div>\r\n            {postList ? <RenderItems/> : <div>로딩중</div> }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default CssTest","C:\\1234\\Pinterest\\frontend\\src\\components\\PinCard.js",["243"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Layout.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Header.js",["244"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\Following.js",["245"],"import React, {useState} from 'react'\r\nimport Layout from \"../components/Layout\";\r\nimport PostList from \"../components/PostList\";\r\nimport PrimaryButton from \"../components/Button/PrimaryButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport FollowingTagModal from \"../components/FollowingList/FollowingTagModal\";\r\nimport FollowingUserModal from \"../components/FollowingList/FollowingUserModal\";\r\n\r\nfunction Following(props) {\r\n    const [followingTagModalVisibility, setFollowingTagModalVisibility] = useState(\"hidden\")\r\n    const [followingUserModalVisibility, setFollowingUserModalVisibility] = useState(\"hidden\")\r\n\r\n    return(\r\n        <Layout props={props}>\r\n            <div className=\"max-w-screen-md mx-auto my-10\">\r\n                <PrimaryButton className={\"my-3 mx-3\"} onClick={()=>setFollowingUserModalVisibility(\"block\")}>팔로우 중인 사람</PrimaryButton>\r\n                <PrimaryButton onClick={()=>setFollowingTagModalVisibility(\"block\")}>팔로우 중인 태그</PrimaryButton>\r\n            </div>\r\n            <FollowingTagModal className={followingTagModalVisibility} onClickOutside={() => setFollowingTagModalVisibility(\"hidden\")}/>\r\n            <FollowingUserModal className={followingUserModalVisibility} onClickOutside={() => setFollowingUserModalVisibility(\"hidden\")}/>\r\n\r\n            <PostList url={'following_pin'}/>\r\n        </Layout>\r\n    )\r\n} export default Following","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\account_settings.js",[],"C:\\1234\\Pinterest\\frontend\\src\\pages\\profile.js",["246","247","248","249","250"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Layout from \"../components/Layout\";\r\nimport ProfilePicture from \"../components/ProfilePicture\";\r\nimport PostList from \"../components/PostList\";\r\nimport BoardsFeed from \"../components/Board/BoardsFeed\";\r\nimport BoardCreateModal from \"../components/Board/BoardCreateModal\";\r\nimport useOnClickOutside from \"../utils/useOnClickOutside\";\r\nimport FollowUserButton from \"../components/FollowButton/FollowUserButton\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\n\r\nfunction Profile(props) {\r\n    const [userData, setUserData] = useState([])\r\n    const [boards, setBoards] = useState([])\r\n    let [addMenuVisibility, setAddMenuVisibility] = useState(\"hidden\")\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user,\r\n    }))\r\n    const username = props.match.params.key1;\r\n    useEffect(() => {\r\n        axiosInstance(`pinterestAccounts/user/${username}`).then((res) => {\r\n            setUserData(res.data)\r\n        }).catch((e) => console.log(e))\r\n\r\n        axiosInstance(`boards?author__username=${username}`).then((res) => setBoards(res.data))\r\n            .catch((e) => console.log(e));\r\n    },[username] )\r\n\r\n    function AddWidget(props) {\r\n        let [createBoardModalVisibility, setCreateBoardModalVisibility] = useState(\"hidden\")\r\n        let ref = useRef()\r\n        useOnClickOutside(ref, () => setAddMenuVisibility(\"hidden\"))\r\n        function handleAddButtonOnClick(e){\r\n            if(addMenuVisibility == \"block\") setAddMenuVisibility(\"hidden\")\r\n            else setAddMenuVisibility(\"block\")\r\n        }\r\n        return(\r\n            <div>\r\n                <button onClick={handleAddButtonOnClick} className={`px-2 py-1 rounded-full hover:bg-gray-200 block ml-auto`}>+</button>\r\n                <div className=\"relative\">\r\n                    <div className={`rounded-xl px-4 py-2 w-40 bg-white shadow-xl ${addMenuVisibility} absolute right-0`}>\r\n                        <div className=\"my-2 text-sm\"> 만들기</div>\r\n                        <Link to={'/pin-add'}><button className=\"text-left text-black w-full block my-2 font-bold p-2 rounded-xl hover:bg-gray-300 hover:text-black\">핀</button></Link>\r\n                        <button className=\"text-left w-full block my-2 font-bold p-2 rounded-xl hover:bg-gray-300\" onClick={() => setCreateBoardModalVisibility(\"block\")}>보드</button>\r\n                    </div>\r\n                </div>\r\n                <BoardCreateModal className={createBoardModalVisibility} onClickOutside={() => setCreateBoardModalVisibility(\"hidden\")} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Layout props={props}>\r\n            <div className=\"text-center\">\r\n                <div className=\"flex justify-center\">\r\n                    <ProfilePicture user={userData} size=\"3\"/>\r\n                </div>\r\n                <h1 className=\"text-3xl font-bold\">{userData.email}</h1>\r\n                <div>@{userData.username}</div>\r\n                <div>팔로워 {userData.follower ? userData.follower.length : 0} 명 · 팔로잉 {userData.following_user ? userData.following_user.length : 0} 명</div>\r\n                {userData.username != loggedUser.username &&\r\n                <div className=\"mt-5\"><FollowUserButton user={userData}/></div>\r\n                }\r\n            </div>\r\n            <div className=\"container mx-auto mt-10\">\r\n                {userData.username && loggedUser.username && (\r\n                    <>\r\n                        {(userData.username == loggedUser.username) ? (\r\n                            <>\r\n                                <AddWidget/>\r\n                                <BoardsFeed username={userData.username} boards={boards}/>\r\n                            </>\r\n                        ) : (\r\n                            <PostList filter={`author__username=${userData.username}`}/>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}export default React.memo(Profile)","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\edit_profile.js",["251"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Modal.js",[],["252","253"],"C:\\1234\\Pinterest\\frontend\\src\\utils\\useOnClickOutside.js",["254"],"import React, {useEffect} from 'react'\r\n\r\nexport default function useOnClickOutside(ref, handler) {\r\n    useEffect(\r\n        () => {\r\n            const listener = event => {\r\n                // ref 요소를 클릭하면 암것도 안함\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n                handler(event);\r\n            };\r\n\r\n            document.addEventListener('mousedown', listener);\r\n            document.addEventListener('touchstart', listener);\r\n            return () => {\r\n                document.removeEventListener('mousedown', listener);\r\n                document.removeEventListener('touchstart', listener);\r\n            }\r\n        }, [ref, handler]\r\n    )\r\n}",["255","256"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pin.js",["257","258","259","260"],"import React, {useEffect, useState} from 'react'\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Tabs from \"../../components/Tab\";\r\nimport PostList from \"../../components/PostList\";\r\nimport FollowUserButton from \"../../components/FollowButton/FollowUserButton\";\r\nimport UserSignature from \"../../components/UserSignature\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\n\r\nexport default function Pin(props) {\r\n    let pinNum = props.match.params.key1;\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user,\r\n    }))\r\n    let [pinData, setPinData] = useState([]);\r\n    let [userData, setUserData] = useState([]);\r\n\r\n    function getData() {\r\n        axiosInstance.get(`pins/${pinNum}`)\r\n            .then((res) => {\r\n                setPinData(res.data);\r\n                axiosInstance.get(`pinterestAccounts/user/${res.data.author}`).then((res) =>{\r\n                    setUserData(res.data);\r\n                }).catch((e) => console.log(e.response))\r\n            }).catch((e)=>console.log(e.response))\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [pinNum])\r\n    return (\r\n        <Layout props={props}>\r\n            <div className=\"md:container mx-auto max-w-lg\">\r\n                <div className=\"overflow-hidden shadow-lg rounded-3xl bg-white\">\r\n                    <div className=\"flex flex-wrap\">\r\n                        <div className=\"\">\r\n                                <img className=\"\" src={pinData.image}/>\r\n                        </div>\r\n                        <div className=\"p-5 pl-10 \">\r\n                            <div className=\"pr-5\">\r\n                                <h1 className=\"text-4xl font-bold\">{pinData.title}</h1>\r\n                                <div className=\"flex justify-between my-2\">\r\n                                    { pinData.author &&\r\n                                    <>\r\n                                        <UserSignature user={userData} includeFollowers />\r\n                                        {  pinData.author.username != loggedUser.username &&\r\n                                        <>\r\n                                            <FollowUserButton user={userData} />\r\n                                        </>\r\n                                        }\r\n                                    </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"text-bold\">\r\n                                    <br/>\r\n\r\n                                    태그\r\n                                    <Tabs pin_tags={pinData.tag_set}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"font-bold text-center mt-10 text-xl\">비슷한 사진들이에요.</h2>\r\n                <PostList url={`${pinNum}/similar_pin`}/>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\components\\Tab.js",[],["261","262"],"C:\\1234\\Pinterest\\frontend\\src\\components\\UserSignature.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\ProfilePicture.js",["263"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ProfilePicture({user, size}) {\r\n    if(user.avatar){\r\n        return(\r\n            <Link to={`/profile/${user.username}`}>\r\n                <img src={user.avatar} className=\"rounded-full\"\r\n                style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}/>\r\n            </Link>\r\n        )\r\n    }\r\n    else if(user.username){\r\n        const firstLetter = user.username[0]\r\n        return(\r\n            <Link to={`/profile/${user.username}`}>\r\n                <div className=\"rounded-full bg-gray-300 font-bold grid place-items-center\" style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}>\r\n                    {firstLetter}\r\n                </div>\r\n            </Link>\r\n        )\r\n    }\r\n    return (\r\n        <Link to={`/profile/${user.username}`}>\r\n            <div className=\"rounded-full bg-gray-300 font-bold grid place-items-center\" style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}>\r\n                U\r\n            </div>\r\n        </Link>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pinCreate.js",["264"],"import {useHistory} from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useRef, useState} from \"react\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\nimport {notification} from \"antd\";\r\n\r\nexport default function PinCreate(props){\r\n\r\n    const history = useHistory()\r\n    const fileInputRef = useRef()\r\n\r\n    let[title, setTitle] = useState('')\r\n    let[image, setImage] = useState('')\r\n    let[imageURL, setImageURL] = useState('')\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append('title', title)\r\n        if(image)\r\n            formData.append('image', image)\r\n        else if(imageURL)\r\n            formData.append('image_url', imageURL)\r\n        try{\r\n            const res = await axiosInstance.post('pins/', formData)\r\n            history.push(`pin/${res.data.id}`)\r\n            notification.open({\r\n                message: '핀이 생성되었습니다.'\r\n            })\r\n        }\r\n        catch (error) {\r\n            const {data: ErrorMessages} = error.response\r\n            notification.open({\r\n                message: Object.entries(ErrorMessages).reduce(\r\n                    (acc,[fieldName, err]) => {\r\n                        acc += err\r\n                        return acc\r\n                    }\r\n                ),\r\n            })\r\n        }\r\n    }\r\n    const handleChange = (e) => {\r\n        setImage(e.target.files[0])\r\n        setImageURL(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n    const handleUrl = (e) => {\r\n        setImageURL(e.target.value)\r\n    }\r\n    return (\r\n        <Layout props={props}>\r\n            <div className=\"bg-gray-200\">\r\n                <div className=\"max-w-screen-md py-10 mx-auto\">\r\n                    <div className={\"overflow-hidden shadow-lg rounded-3xl bg-white\"}>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"p-10\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <button className=\"font-bold text-white px-4 py-2 rounded-r-lg\" style={{backgroundColor: '#E60023'}}>저장</button>\r\n                                </div>\r\n                                <div className=\"flex flex-wrap mt-5\">\r\n                                    <div className=\"flex flex-col w-full sm:w-1/2\">\r\n                                        { !imageURL &&\r\n                                        <div className=\"bg-gray-300 w-64 rounded-lg p-2 flex-grow w-full cursor-pointer\" onClick={() => fileInputRef.current.click()}>\r\n                                            <div className=\"rounded-lg border-2 border-gray-400 border-dashed h-full relative\">\r\n                                                <div className=\"text-center mx-auto\" style={{marginTop: \"50%\", minHeight: \"15rem\"}}>\r\n                                                    <div className=\"my-2\">이미지 업로드</div>\r\n                                                </div>\r\n                                                <div className=\"absolute text-sm bottom-0 text-center\">권장사항 : 20MB 이하 고화질 원본 .jpg 파일</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                        { imageURL &&\r\n                                        <img src={imageURL} />\r\n                                        }\r\n                                        이미지 URL 로 업로드 하기\r\n                                        <input type=\"text\" id='imageURL' placeholder=\"이미지 URL 입력해보세요!\" value={imageURL} onChange={handleUrl}/>\r\n                                    </div>\r\n                                    <div className=\"sm:px-10 py-5 w-full sm:w-1/2\" style={{minHeight: \"510px\"}}>\r\n                                        <input ref={fileInputRef} type=\"file\" className=\"hidden\" onChange={handleChange}/>\r\n                                        <input onChange={e => setTitle(e.target.value)} value={title} className=\"outline-none border-b focus:border-blue-500 focus:border-b-2 w-full py-2 text-3xl font-bold\" placeholder=\"제목 추가\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\index.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\PrimaryButton.js",[],["265","266"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\SecondaryButton.js",[],"C:\\1234\\Pinterest\\frontend\\src\\utils\\axios.js",["267"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\BaseButton.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\BaseAlert.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\WarnAlert.js",[],["268","269"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Alert\\OKAlert.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\FollowingList\\FollowingTagModal.js",["270"],"C:\\1234\\Pinterest\\frontend\\src\\components\\PinDelete.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardButton.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton\\FollowUserButton.js",["271","272"],"import React from 'react'\r\nimport {useEffect, useState} from \"react\";\r\nimport SecondaryButton from \"../Button/SecondaryButton\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\nimport {notification} from \"antd\";\r\n\r\nexport default function FollowUserButton({user}){\r\n    let [isFollowing, setIsFollowing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('pinterestAccounts/following-user').then((res) => {\r\n            for(let idx in res.data)\r\n                if(res.data[idx].username === user.username){\r\n                    setIsFollowing(true)\r\n                    break;\r\n                } else setIsFollowing(false)\r\n        })\r\n    }, [user, isFollowing])\r\n\r\n    const follow = async() => {\r\n        try{\r\n            const res = await axiosInstance.post('pinterestAccounts/follow', {'username': user.username})\r\n            setIsFollowing(true)\r\n            notification.open({\r\n                message: `${user.username}님을 팔로잉합니다.`\r\n            })\r\n        }\r\n        catch(error){\r\n            const {data: ErrorMessages} = error.response\r\n            notification.open({\r\n                message: Object.entries(ErrorMessages).reduce(\r\n                    (acc,[fieldName, err]) => {\r\n                        acc += err\r\n                        return acc\r\n                    }\r\n                ),\r\n            })\r\n        }\r\n    }\r\n    const unfollow = async() => {\r\n        try{\r\n            const res = await axiosInstance.post('pinterestAccounts/unfollow', {'username': user.username})\r\n            setIsFollowing(false)\r\n            notification.open({\r\n                message: `${user.username}님을 팔로우 취소합니다.`\r\n            })\r\n        }\r\n        catch(error){\r\n            const {data: ErrorMessages} = error.response\r\n            notification.open({\r\n                message: Object.entries(ErrorMessages).reduce(\r\n                    (acc,[fieldName, err]) => {\r\n                        acc += err\r\n                        return acc\r\n                    }\r\n                ),\r\n            })\r\n        }\r\n    }\r\n    if(isFollowing){\r\n        return <SecondaryButton onClick={unfollow} className=\"px-4 py-2 rounded-3xl ml-auto \">팔로잉중</SecondaryButton>\r\n    }\r\n    else{\r\n        return <SecondaryButton onClick={follow} className=\"px-4 py-2 rounded-3xl ml-auto \">팔로우하기</SecondaryButton>\r\n    }\r\n}","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton\\FollowTagButton.js",["273"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\Board.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardCreateModal.js",["274"],"C:\\1234\\Pinterest\\frontend\\src\\components\\FollowingList\\FollowingUserModal.js",["275"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardsFeed.js",["276"],"import React from 'react'\r\n\r\nfunction getBoardDisplayImage(board){\r\n    if(board.pin.length >= 1)\r\n        return board.pin[0].image\r\n}\r\n\r\nexport default function BoardsFeed({ boards, username }){\r\n    return (\r\n        <div className=\"flex flex-wrap\">\r\n\r\n            {boards && boards.map((board, index) => (\r\n                <div key={index} className=\"mx-5\">\r\n                    <a href={`/${username}/board/${board.title}/`}>\r\n                        <div className=\"rounded-xl overflow-hidden bg-gray-300 w-64 h-32\" >\r\n                            <img className=\"w-full\" src={getBoardDisplayImage(board)} />\r\n                        </div>\r\n                    </a>\r\n                        <h3 className=\"text-xl font-bold\">{board.title}</h3>\r\n                    <div>{board.pin.length} pins</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":55,"column":8,"nodeType":"283","endLine":55,"endColumn":10,"suggestions":"284"},{"ruleId":"281","severity":1,"message":"285","line":58,"column":8,"nodeType":"283","endLine":58,"endColumn":10,"suggestions":"286"},{"ruleId":"277","replacedBy":"287"},{"ruleId":"279","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":4,"column":9,"nodeType":"291","messageId":"292","endLine":4,"endColumn":13},{"ruleId":"293","severity":1,"message":"294","line":88,"column":17,"nodeType":"295","endLine":88,"endColumn":126},{"ruleId":"277","replacedBy":"296"},{"ruleId":"279","replacedBy":"297"},{"ruleId":"289","severity":1,"message":"290","line":2,"column":9,"nodeType":"291","messageId":"292","endLine":2,"endColumn":13},{"ruleId":"289","severity":1,"message":"298","line":2,"column":15,"nodeType":"291","messageId":"292","endLine":2,"endColumn":25},{"ruleId":"293","severity":1,"message":"294","line":101,"column":17,"nodeType":"295","endLine":101,"endColumn":126},{"ruleId":"277","replacedBy":"299"},{"ruleId":"279","replacedBy":"300"},{"ruleId":"289","severity":1,"message":"301","line":7,"column":9,"nodeType":"291","messageId":"292","endLine":7,"endColumn":20},{"ruleId":"289","severity":1,"message":"302","line":8,"column":8,"nodeType":"291","messageId":"292","endLine":8,"endColumn":19},{"ruleId":"289","severity":1,"message":"303","line":10,"column":9,"nodeType":"291","messageId":"292","endLine":10,"endColumn":28},{"ruleId":"277","replacedBy":"304"},{"ruleId":"279","replacedBy":"305"},{"ruleId":"289","severity":1,"message":"306","line":1,"column":16,"nodeType":"291","messageId":"292","endLine":1,"endColumn":22},{"ruleId":"289","severity":1,"message":"307","line":1,"column":9,"nodeType":"291","messageId":"292","endLine":1,"endColumn":14},{"ruleId":"289","severity":1,"message":"308","line":1,"column":16,"nodeType":"291","messageId":"292","endLine":1,"endColumn":22},{"ruleId":"309","severity":1,"message":"310","line":12,"column":1,"nodeType":"311","endLine":56,"endColumn":2},{"ruleId":"277","replacedBy":"312"},{"ruleId":"279","replacedBy":"313"},{"ruleId":"289","severity":1,"message":"314","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":15},{"ruleId":"309","severity":1,"message":"315","line":17,"column":1,"nodeType":"311","endLine":21,"endColumn":2},{"ruleId":"289","severity":1,"message":"316","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":10,"column":9,"nodeType":"291","messageId":"292","endLine":10,"endColumn":20},{"ruleId":"277","replacedBy":"318"},{"ruleId":"279","replacedBy":"319"},{"ruleId":"289","severity":1,"message":"320","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":17},{"ruleId":"289","severity":1,"message":"321","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":15},{"ruleId":"289","severity":1,"message":"322","line":12,"column":15,"nodeType":"291","messageId":"292","endLine":12,"endColumn":19},{"ruleId":"293","severity":1,"message":"294","line":23,"column":29,"nodeType":"295","endLine":23,"endColumn":70},{"ruleId":"289","severity":1,"message":"323","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":17},{"ruleId":"289","severity":1,"message":"317","line":5,"column":9,"nodeType":"291","messageId":"292","endLine":5,"endColumn":20},{"ruleId":"289","severity":1,"message":"298","line":2,"column":15,"nodeType":"291","messageId":"292","endLine":2,"endColumn":25},{"ruleId":"289","severity":1,"message":"324","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":20},{"ruleId":"325","severity":1,"message":"326","line":35,"column":34,"nodeType":"327","messageId":"328","endLine":35,"endColumn":36},{"ruleId":"325","severity":1,"message":"329","line":62,"column":36,"nodeType":"327","messageId":"328","endLine":62,"endColumn":38},{"ruleId":"325","severity":1,"message":"326","line":69,"column":45,"nodeType":"327","messageId":"328","endLine":69,"endColumn":47},{"ruleId":"293","severity":1,"message":"294","line":68,"column":37,"nodeType":"295","endLine":68,"endColumn":112},{"ruleId":"277","replacedBy":"330"},{"ruleId":"279","replacedBy":"331"},{"ruleId":"289","severity":1,"message":"332","line":1,"column":8,"nodeType":"291","messageId":"292","endLine":1,"endColumn":13},{"ruleId":"277","replacedBy":"333"},{"ruleId":"279","replacedBy":"334"},{"ruleId":"289","severity":1,"message":"335","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":13},{"ruleId":"281","severity":1,"message":"336","line":30,"column":8,"nodeType":"283","endLine":30,"endColumn":16,"suggestions":"337"},{"ruleId":"293","severity":1,"message":"294","line":37,"column":33,"nodeType":"295","endLine":37,"endColumn":72},{"ruleId":"325","severity":1,"message":"329","line":46,"column":68,"nodeType":"327","messageId":"328","endLine":46,"endColumn":70},{"ruleId":"277","replacedBy":"338"},{"ruleId":"279","replacedBy":"339"},{"ruleId":"293","severity":1,"message":"294","line":8,"column":17,"nodeType":"295","endLine":9,"endColumn":72},{"ruleId":"293","severity":1,"message":"294","line":72,"column":41,"nodeType":"295","endLine":72,"endColumn":63},{"ruleId":"277","replacedBy":"340"},{"ruleId":"279","replacedBy":"341"},{"ruleId":"289","severity":1,"message":"317","line":2,"column":9,"nodeType":"291","messageId":"292","endLine":2,"endColumn":20},{"ruleId":"277","replacedBy":"342"},{"ruleId":"279","replacedBy":"343"},{"ruleId":"289","severity":1,"message":"344","line":13,"column":19,"nodeType":"291","messageId":"292","endLine":13,"endColumn":22},{"ruleId":"289","severity":1,"message":"344","line":22,"column":19,"nodeType":"291","messageId":"292","endLine":22,"endColumn":22},{"ruleId":"289","severity":1,"message":"344","line":42,"column":19,"nodeType":"291","messageId":"292","endLine":42,"endColumn":22},{"ruleId":"289","severity":1,"message":"344","line":9,"column":19,"nodeType":"291","messageId":"292","endLine":9,"endColumn":22},{"ruleId":"289","severity":1,"message":"344","line":11,"column":19,"nodeType":"291","messageId":"292","endLine":11,"endColumn":22},{"ruleId":"289","severity":1,"message":"344","line":15,"column":19,"nodeType":"291","messageId":"292","endLine":15,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":16,"column":29,"nodeType":"295","endLine":16,"endColumn":89},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loggedUser.username'. Either include it or remove the dependency array.","ArrayExpression",["347"],"React Hook useEffect has missing dependencies: 'curCursor.curCursor' and 'initFeed'. Either include them or remove the dependency array.",["348"],["345"],["346"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["345"],["346"],"'useHistory' is defined but never used.",["345"],["346"],"'createStore' is defined but never used.","'RootReducer' is defined but never used.","'composeWithDevTools' is defined but never used.",["345"],["346"],"'SIGNUP' is defined but never used.","'login' is defined but never used.","'logout' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["345"],["346"],"'hardSet' is defined but never used.","Assign arrow function to a variable before exporting as module default","'Layout' is defined but never used.","'useSelector' is defined but never used.",["345"],["346"],"'WarnAlert' is defined but never used.","'OKAlert' is defined but never used.","'data' is assigned a value but never used.","'SearchBar' is defined but never used.","'useDispatch' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["345"],["346"],"'React' is defined but never used.",["345"],["346"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["349"],["345"],["346"],["345"],["346"],["345"],["346"],"'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [loggedUser.username]",{"range":"356","text":"357"},"Update the dependencies array to be: [curCursor.curCursor, initFeed]",{"range":"358","text":"359"},"Update the dependencies array to be: [getData, pinNum]",{"range":"360","text":"361"},[1858,1860],"[loggedUser.username]",[1930,1932],"[curCursor.curCursor, initFeed]",[1182,1190],"[getData, pinNum]"]