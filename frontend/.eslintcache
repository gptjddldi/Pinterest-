[{"C:\\1234\\Pinterest\\frontend\\src\\pages\\Home.js":"1","C:\\1234\\Pinterest\\frontend\\src\\components\\PostList.js":"2","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\login.js":"3","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\signup.js":"4","C:\\1234\\Pinterest\\frontend\\src\\index.js":"5","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\index.js":"6","C:\\1234\\Pinterest\\frontend\\src\\actions\\types.js":"7","C:\\1234\\Pinterest\\frontend\\src\\actions\\userAction.js":"8","C:\\1234\\Pinterest\\frontend\\src\\reducers\\userReducer.js":"9","C:\\1234\\Pinterest\\frontend\\src\\store.js":"10","C:\\1234\\Pinterest\\frontend\\src\\pages\\index.js":"11","C:\\1234\\Pinterest\\frontend\\src\\reducers\\index.js":"12","C:\\1234\\Pinterest\\frontend\\src\\components\\routings\\LoginRequiredRouter.js":"13","C:\\1234\\Pinterest\\frontend\\src\\pages\\CssTest.js":"14","C:\\1234\\Pinterest\\frontend\\src\\components\\PinCard.js":"15","C:\\1234\\Pinterest\\frontend\\src\\components\\Layout.js":"16","C:\\1234\\Pinterest\\frontend\\src\\components\\SearchBar.js":"17","C:\\1234\\Pinterest\\frontend\\src\\components\\Header.js":"18","C:\\1234\\Pinterest\\frontend\\src\\components\\Card.js":"19","C:\\1234\\Pinterest\\frontend\\src\\pages\\Following.js":"20","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\account_settings.js":"21","C:\\1234\\Pinterest\\frontend\\src\\pages\\profile.js":"22","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\edit_profile.js":"23","C:\\1234\\Pinterest\\frontend\\src\\components\\Modal.js":"24","C:\\1234\\Pinterest\\frontend\\src\\utils\\useOnClickOutside.js":"25","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton.js":"26","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pin.js":"27","C:\\1234\\Pinterest\\frontend\\src\\components\\Tab.js":"28","C:\\1234\\Pinterest\\frontend\\src\\components\\UserSignature.js":"29","C:\\1234\\Pinterest\\frontend\\src\\components\\ProfilePicture.js":"30","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pinCreate.js":"31","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\index.js":"32","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\PrimaryButton.js":"33","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\SecondaryButton.js":"34","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardCreateModal.js":"35","C:\\1234\\Pinterest\\frontend\\src\\utils\\axios.js":"36","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\Board.js":"37","C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\BaseButton.js":"38","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardsFeed.js":"39"},{"size":1175,"mtime":1613479652783,"results":"40","hashOfConfig":"41"},{"size":1051,"mtime":1613727150521,"results":"42","hashOfConfig":"41"},{"size":4475,"mtime":1613960733376,"results":"43","hashOfConfig":"41"},{"size":5748,"mtime":1613961617730,"results":"44","hashOfConfig":"41"},{"size":756,"mtime":1613479609890,"results":"45","hashOfConfig":"41"},{"size":420,"mtime":1613524043471,"results":"46","hashOfConfig":"41"},{"size":156,"mtime":1611731102249,"results":"47","hashOfConfig":"41"},{"size":231,"mtime":1611731140403,"results":"48","hashOfConfig":"41"},{"size":989,"mtime":1611732618506,"results":"49","hashOfConfig":"41"},{"size":732,"mtime":1611998175753,"results":"50","hashOfConfig":"41"},{"size":1261,"mtime":1613968944849,"results":"51","hashOfConfig":"41"},{"size":170,"mtime":1610083886109,"results":"52","hashOfConfig":"41"},{"size":564,"mtime":1613968897581,"results":"53","hashOfConfig":"41"},{"size":4502,"mtime":1613903336327,"results":"54","hashOfConfig":"41"},{"size":723,"mtime":1613963041154,"results":"55","hashOfConfig":"41"},{"size":282,"mtime":1613464899800,"results":"56","hashOfConfig":"41"},{"size":709,"mtime":1610520153269,"results":"57","hashOfConfig":"41"},{"size":4146,"mtime":1613967316878,"results":"58","hashOfConfig":"41"},{"size":212,"mtime":1610524061622,"results":"59","hashOfConfig":"41"},{"size":721,"mtime":1613726985180,"results":"60","hashOfConfig":"41"},{"size":3202,"mtime":1613962626548,"results":"61","hashOfConfig":"41"},{"size":4278,"mtime":1613967857515,"results":"62","hashOfConfig":"41"},{"size":3624,"mtime":1613962519132,"results":"63","hashOfConfig":"41"},{"size":1101,"mtime":1612421034754,"results":"64","hashOfConfig":"41"},{"size":759,"mtime":1612420981325,"results":"65","hashOfConfig":"41"},{"size":1340,"mtime":1613962858208,"results":"66","hashOfConfig":"41"},{"size":3610,"mtime":1613968330975,"results":"67","hashOfConfig":"41"},{"size":421,"mtime":1612851814094,"results":"68","hashOfConfig":"41"},{"size":545,"mtime":1612851335595,"results":"69","hashOfConfig":"41"},{"size":1056,"mtime":1611564430401,"results":"70","hashOfConfig":"41"},{"size":3990,"mtime":1613523401400,"results":"71","hashOfConfig":"41"},{"size":498,"mtime":1613524175954,"results":"72","hashOfConfig":"41"},{"size":314,"mtime":1613622851389,"results":"73","hashOfConfig":"41"},{"size":318,"mtime":1613623216563,"results":"74","hashOfConfig":"41"},{"size":1507,"mtime":1613962846979,"results":"75","hashOfConfig":"41"},{"size":447,"mtime":1613961005373,"results":"76","hashOfConfig":"41"},{"size":3261,"mtime":1613962835863,"results":"77","hashOfConfig":"41"},{"size":387,"mtime":1613622426272,"results":"78","hashOfConfig":"41"},{"size":1051,"mtime":1613728611573,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qfzmud",{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"85"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"114"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"85"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"85"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"85"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"85"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"131"},"C:\\1234\\Pinterest\\frontend\\src\\pages\\Home.js",["181"],"C:\\1234\\Pinterest\\frontend\\src\\components\\PostList.js",["182","183"],"import React, {useEffect, useState} from 'react'\r\nimport PinCard from \"./PinCard\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\n// react-masonry-css: pinterest 스타일 layout 느낌\r\n\r\nconst PostList = ({filter}) => {\r\n\r\n    const [postList, setPostList] = useState([])\r\n\r\n    useEffect( () => {\r\n        axiosInstance.get(filter ? `${filter}` : 'pins/')\r\n            .then((res) => setPostList(res.data))\r\n            .catch((err)=>console.log(err))\r\n    }, [])\r\n\r\n    // 무한 스크롤 구현\r\n\r\n    return(\r\n        <div>\r\n            <Masonry\r\n                breakpointCols={{default: 5, 1280: 4, 1024: 3, 768: 2, 640: 1}}\r\n                className=\"container mx-auto flex\"\r\n                columnClassName=\"mx-2\"\r\n            >\r\n                {postList.map((pin, index) =>\r\n                    <PinCard className=\"my-10\" pin={pin} key={index}/>\r\n                )}\r\n            </Masonry>\r\n        </div>\r\n    )\r\n}\r\nexport default React.memo(PostList)",["184","185"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\login.js",["186","187"],"import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../actions/userAction\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const dispatch = useDispatch()\r\n    const onLogin = (data) => dispatch(login(data));\r\n\r\n    const {from: loginRedirectUrl} = location.state || {from: {pathname: \"/\"}}\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const Login = (e) => {\r\n        e.preventDefault()\r\n        const data = {email, password}\r\n        axiosInstance.post('rest-auth/login/', data).then((res)=> {\r\n            onLogin(res.data);\r\n            history.push(loginRedirectUrl)\r\n        }).catch((e) => console.log(e))\r\n    }\r\n    return(\r\n        <div className=\"bg-white h-screen w-full flex flex-wrap\">\r\n\r\n            <div className=\"w-full md:w-1/2 flex flex-col\">\r\n\r\n                <div className=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\">\r\n                    <svg className=\"text-red-500\" height=\"32\" width=\"32\" viewBox=\"0 0 24 24\" aria-label=\"Pinterest logo\">\r\n                        <path\r\n                            d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\">\r\n                        </path>\r\n                    </svg>\r\n                    <div className={\"font-bold text-lg text-red-500\"}>Pinterest</div>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                    <p className=\"text-center text-3xl\">환영합니다. Pinterest Clone Page 입니다.</p>\r\n                    <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={Login}>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"email\" className=\"text-lg\">이메일</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" aria-label=\"email\" value={email} required\r\n                                   onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"password\" className=\"text-lg\">비밀번호</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"password\" id=\"password\" placeholder=\"비밀번호를 입력하세요.\" value={password} arial-label=\"password\"\r\n                                   onChange={(e)=>setPassword(e.target.value)}\r\n                                   required/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" value=\"로그인\" className=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\"/>\r\n                    </form>\r\n                    <div className=\"text-center pt-12 pb-12\">\r\n                        <p className=\"hover:text-red-500\" onClick={()=> props.toSignupClick()}>아직 Pinterest 를 사용하고 있지 않으신가요? 가입하기</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"w-1/2 shadow-2xl\">\r\n                <img className=\"object-cover w-full h-screen hidden md:block\" src=\"https://source.unsplash.com/IXUM4cJynP0\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\signup.js",["188","189","190","191","192"],"import React, {useState} from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\n\r\n\r\nexport default function Signup(props) {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password1, setPassword1] = useState(\"\")\r\n    const [password2, setPassword2] = useState(\"\")\r\n\r\n    const Signup = (e) => {\r\n        e.preventDefault()\r\n        const data = {email, username, password1, password2}\r\n        axiosInstance.post('rest-auth/registration/', data).then(props.toLoginClick).catch((e)=>console.log(e))\r\n    }\r\n    return(\r\n        <div className=\"w-full flex flex-wrap bg-white h-screen\">\r\n\r\n            <div className=\"w-full md:w-1/2 flex flex-col\">\r\n\r\n                <div className=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\">\r\n                    <svg className=\"text-red-500\" height=\"32\" width=\"32\" viewBox=\"0 0 24 24\" aria-label=\"Pinterest logo\">\r\n                        <path\r\n                            d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\">\r\n                        </path>\r\n                    </svg>\r\n                    <div className={\"font-bold text-lg text-red-500\"}>Pinterest</div>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                    <p className=\"text-center text-3xl\">회원가입 페이지 입니다.</p>\r\n                    <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={Signup}>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"email\" className=\"text-lg\">이메일</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" aria-label=\"email\" value={email} required\r\n                                   onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"username\" className=\"text-lg\">사용자 이름</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"username\" id=\"username\" placeholder=\"사용자 이름을 입력해주세요.\" value={username} arial-label=\"username\"\r\n                                onChange={(e)=>setUsername(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"password\" className=\"text-lg\">비밀번호</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"password\" id=\"password\" placeholder=\"비밀번호를 입력하세요.\" value={password1}\r\n                                arial-label=\"password\"\r\n                                onChange={(e) => setPassword1(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label htmlFor=\"password\" className=\"text-lg\">비밀번호 확인</label>\r\n                            <input\r\n                                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"\r\n                                type=\"password\" id=\"password\" placeholder=\"비밀번호를 다시 입력해주세요.\" value={password2}\r\n                                arial-label=\"password\"\r\n                                onChange={(e) => setPassword2(e.target.value)}\r\n                                required/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" value=\"회원가입\" className=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\"/>\r\n                    </form>\r\n                    <div className=\"text-center pt-12 pb-12\">\r\n                        <p className=\"hover:text-red-500\" onClick={()=> props.toLoginClick()}>이미 Pinterest의 계정이 있으신가요?</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"w-1/2 shadow-2xl\">\r\n                <img className=\"object-cover w-full h-screen hidden md:block\" src=\"https://source.unsplash.com/IXUM4cJynP0\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\1234\\Pinterest\\frontend\\src\\index.js",["193","194","195"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"antd/dist/antd.css\"\nimport {BrowserRouter} from \"react-router-dom\";\nimport Root from \"./pages\";\nimport {createStore} from \"redux\";\nimport RootReducer from \"./reducers\";\nimport {Provider} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport configureStore from './store'\n\nconst {store, persistor} = configureStore()\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <Provider store={store} >\n          <PersistGate loading={null} persistor={persistor}>\n              <Root />\n          </PersistGate>\n      </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\index.js",["196"],"import React from 'react'\r\nimport {Route} from \"react-router-dom\";\r\nimport Login from \"./login\";\r\nimport Signup from \"./signup\";\r\nimport Profile from \"../profile\";\r\n\r\nexport default function AccountRoutes ({match}) {\r\n    return(\r\n        <div>\r\n            <Route exact path={match.url + '/login'} component={Login}/>\r\n            <Route exact path={match.url + '/signup'} component={Signup}/>\r\n        </div>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\actions\\types.js",[],"C:\\1234\\Pinterest\\frontend\\src\\actions\\userAction.js",["197"],"import {LOGIN, SIGNUP, LOGOUT, UPDATE} from './types'\r\n\r\nexport const login = (data) => ({ type:LOGIN, payload: data})\r\nexport const logout = () => ({type: LOGOUT})\r\nexport const update = (data) => ({type:UPDATE, payload:data})\r\n\r\n","C:\\1234\\Pinterest\\frontend\\src\\reducers\\userReducer.js",["198","199","200"],"import {login, logout} from \"../actions/userAction\";\r\nimport {LOGIN, LOGOUT, UPDATE} from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n    token: '',\r\n    user: {},\r\n    isAuth: false\r\n}\r\n\r\n\r\nexport default function(state=defaultState, action){\r\n    switch (action.type){\r\n        case LOGIN:{\r\n            const {payload:data} = action\r\n            return{\r\n                ...state,\r\n                token: data.token,\r\n                user: data.user,\r\n                isAuth: true,\r\n            }\r\n        }\r\n        case UPDATE:{\r\n            const {payload:data} = action\r\n            return{\r\n                ...state,\r\n                user: data,\r\n                isAuth:true,\r\n            }\r\n        }\r\n        case LOGOUT:{\r\n            console.log(\"logout\")\r\n            return {\r\n                ...state,\r\n                token: '',\r\n                user: '',\r\n                isAuth: false\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","C:\\1234\\Pinterest\\frontend\\src\\store.js",["201","202"],"import storage from 'redux-persist/lib/storage'\r\nimport hardSet from \"redux-persist/lib/stateReconciler/hardSet\";\r\nimport {persistReducer, persistStore} from \"redux-persist\";\r\nimport RootReducer from \"./reducers\";\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport {logger} from 'redux-logger'\r\n\r\nconst persistConfig = {\r\n    key: \"userReducer\",\r\n    storage,\r\n    // stateReconciler: hardSet\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, RootReducer)\r\n\r\nexport default() => {\r\n    let store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(logger)))\r\n    let persistor = persistStore(store)\r\n    return {store, persistor}\r\n}",["203","204"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\index.js",["205","206"],"C:\\1234\\Pinterest\\frontend\\src\\reducers\\index.js",[],["207","208"],"C:\\1234\\Pinterest\\frontend\\src\\components\\routings\\LoginRequiredRouter.js",[],"C:\\1234\\Pinterest\\frontend\\src\\pages\\CssTest.js",["209","210","211","212","213","214"],"import React, {useRef, useState} from 'react'\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../actions/userAction\";\r\nimport Axios from \"axios\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\n\r\n\r\nexport default function PinCreate(props){\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const dispatch = useDispatch()\r\n    const onLogin = (data) => dispatch(login(data));\r\n\r\n    const {from: loginRedirectUrl} = location.state || {from: {pathname: \"/\"}}\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const Login = (e) => {\r\n        e.preventDefault()\r\n        const data = {email, password}\r\n        axiosInstance.post('account/login-user/', data).then((res)=> {\r\n            console.log(res);\r\n            // history.push(loginRedirectUrl)\r\n        }).catch((e) => console.log(e))\r\n    }\r\n    return(\r\n        <div className=\"bg-white h-screen w-full flex flex-wrap\">\r\n\r\n            <div className=\"w-full md:w-1/2 flex flex-col\">\r\n\r\n                <div className=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24\">\r\n                    <svg className=\"text-red-500\" height=\"32\" width=\"32\" viewBox=\"0 0 24 24\" aria-label=\"Pinterest logo\">\r\n                        <path\r\n                            d=\"M0 12c0 5.123 3.211 9.497 7.73 11.218-.11-.937-.227-2.482.025-3.566.217-.932 1.401-5.938 1.401-5.938s-.357-.715-.357-1.774c0-1.66.962-2.9 2.161-2.9 1.02 0 1.512.765 1.512 1.682 0 1.025-.653 2.557-.99 3.978-.281 1.189.597 2.159 1.769 2.159 2.123 0 3.756-2.239 3.756-5.471 0-2.861-2.056-4.86-4.991-4.86-3.398 0-5.393 2.549-5.393 5.184 0 1.027.395 2.127.889 2.726a.36.36 0 0 1 .083.343c-.091.378-.293 1.189-.332 1.355-.053.218-.173.265-.4.159-1.492-.694-2.424-2.875-2.424-4.627 0-3.769 2.737-7.229 7.892-7.229 4.144 0 7.365 2.953 7.365 6.899 0 4.117-2.595 7.431-6.199 7.431-1.211 0-2.348-.63-2.738-1.373 0 0-.599 2.282-.744 2.84-.282 1.084-1.064 2.456-1.549 3.235C9.584 23.815 10.77 24 12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12\">\r\n                        </path>\r\n                    </svg>\r\n                    <div className={\"font-bold text-lg text-red-500\"}>Pinterest</div>\r\n                </div>\r\n\r\n                <div className=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                    <p className=\"text-center text-3xl\">환영합니다. Pinterest Clone Page 입니다.</p>\r\n                    <form className=\"flex flex-col pt-3 md:pt-8\" onSubmit={Login}>\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"email\" className=\"text-lg\">이메일</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"email\" id=\"email\" placeholder=\"이메일을 입력하세요.\" aria-label=\"email\" value={email} required\r\n                                   onChange={(e)=>setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col pt-4\">\r\n                            <label for=\"password\" className=\"text-lg\">비밀번호</label>\r\n                            <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\"type=\"password\" id=\"password\" placeholder=\"비밀번호를 입력하세요.\" value={password} arial-label=\"password\"\r\n                                   onChange={(e)=>setPassword(e.target.value)}\r\n                                   required/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" value=\"로그인\" className=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\"/>\r\n                    </form>\r\n                    <div className=\"text-center pt-12 pb-12\">\r\n                        <p className=\"hover:text-red-500\" onClick={()=> props.toSignupClick()}>아직 Pinterest 를 사용하고 있지 않으신가요? 가입하기</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"w-1/2 shadow-2xl\">\r\n                <img className=\"object-cover w-full h-screen hidden md:block\" src=\"https://source.unsplash.com/IXUM4cJynP0\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\1234\\Pinterest\\frontend\\src\\components\\PinCard.js",["215","216"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Layout.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\SearchBar.js",[],["217","218"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Header.js",["219"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Card.js",[],["220","221"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\Following.js",[],"C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\account_settings.js",["222","223","224","225","226"],"C:\\1234\\Pinterest\\frontend\\src\\pages\\profile.js",["227","228","229","230","231","232"],"import React, {useEffect, useRef, useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Layout from \"../components/Layout\";\r\nimport ProfilePicture from \"../components/ProfilePicture\";\r\nimport PostList from \"../components/PostList\";\r\nimport BoardsFeed from \"../components/Board/BoardsFeed\";\r\nimport BoardCreateModal from \"../components/Board/BoardCreateModal\";\r\nimport useOnClickOutside from \"../utils/useOnClickOutside\";\r\nimport FollowButton from \"../components/FollowButton\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\n\r\nfunction Profile(props) {\r\n    const [userData, setUserData] = useState([])\r\n    const [boards, setBoards] = useState([])\r\n    let [addMenuVisibility, setAddMenuVisibility] = useState(\"hidden\")\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user,\r\n    }))\r\n    const username = props.match.params.key1;\r\n    useEffect(() => {\r\n        axiosInstance(`pinterestAccounts/user/${username}`).then((res) => {\r\n            const image_root_data = res.data.avatar? 'http://localhost:8000' + res.data.avatar : '';\r\n            res.data.avatar = image_root_data;\r\n            setUserData(res.data)\r\n        }).catch((e) => console.log(e))\r\n\r\n        axiosInstance(`pinterestAccounts/boards/?author__username=${username}`).then((res) => setBoards(res.data))\r\n            .catch((e) => console.log(e));\r\n    },[] )\r\n\r\n    function AddWidget(props) {\r\n        let [createBoardModalVisibility, setCreateBoardModalVisibility] = useState(\"hidden\")\r\n        let ref = useRef()\r\n        useOnClickOutside(ref, () => setAddMenuVisibility(\"hidden\"))\r\n        function handleAddButtonOnClick(e){\r\n            if(addMenuVisibility == \"block\") setAddMenuVisibility(\"hidden\")\r\n            else setAddMenuVisibility(\"block\")\r\n        }\r\n        return(\r\n            <div>\r\n                <button onClick={handleAddButtonOnClick} className={`px-2 py-1 rounded-full hover:bg-gray-200 block ml-auto`}>+</button>\r\n                <div className=\"relative\">\r\n                    <div className={`rounded-xl px-4 py-2 w-40 bg-white shadow-xl ${addMenuVisibility} absolute right-0`}>\r\n                        <div className=\"my-2 text-sm\"> 만들기</div>\r\n                        <Link to={'/pin-add'}><button className=\"text-left text-black w-full block my-2 font-bold p-2 rounded-xl hover:bg-gray-300 hover:text-black\">핀</button></Link>\r\n                        <button className=\"text-left w-full block my-2 font-bold p-2 rounded-xl hover:bg-gray-300\" onClick={() => setCreateBoardModalVisibility(\"block\")}>보드</button>\r\n                    </div>\r\n                </div>\r\n                <BoardCreateModal className={createBoardModalVisibility} onClickOutside={() => setCreateBoardModalVisibility(\"hidden\")} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Layout props={props}>\r\n            <div className=\"text-center\">\r\n                <div className=\"flex justify-center\">\r\n                    <ProfilePicture user={userData} size=\"3\"/>\r\n                </div>\r\n                <h1 className=\"text-3xl font-bold\">{userData.email}</h1>\r\n                <div>@{userData.username}</div>\r\n                <div>팔로워 {userData.follower ? userData.follower.length : 0} 명 · 팔로잉 {userData.following ? userData.following.length : 0} 명</div>\r\n                {userData.username != loggedUser.username &&\r\n                <div className=\"mt-5\"><FollowButton user={userData}/></div>\r\n                }\r\n            </div>\r\n            <div className=\"container mx-auto mt-10\">\r\n                {userData.username && loggedUser.username && (\r\n                    <>\r\n                        {(userData.username == loggedUser.username) ? (\r\n                            <>\r\n                                <AddWidget/>\r\n                                <BoardsFeed username={userData.username} boards={boards}/>\r\n                            </>\r\n                        ) : (\r\n                            <PostList filter={`pins/?author__username=${userData.username}`}/>\r\n                        )}\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}export default React.memo(Profile)","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\edit_profile.js",["233"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Modal.js",[],"C:\\1234\\Pinterest\\frontend\\src\\utils\\useOnClickOutside.js",["234"],"import React, {useEffect} from 'react'\r\n\r\nexport default function useOnClickOutside(ref, handler) {\r\n    useEffect(\r\n        () => {\r\n            const listener = event => {\r\n                // ref 요소를 클릭하면 암것도 안함\r\n                if (!ref.current || ref.current.contains(event.target)) {\r\n                    return;\r\n                }\r\n                handler(event);\r\n            };\r\n\r\n            document.addEventListener('mousedown', listener);\r\n            document.addEventListener('touchstart', listener);\r\n            return () => {\r\n                document.removeEventListener('mousedown', listener);\r\n                document.removeEventListener('touchstart', listener);\r\n            }\r\n        }, [ref, handler]\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\components\\FollowButton.js",["235","236"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport SecondaryButton from \"./Button/SecondaryButton\";\r\nimport {axiosInstance} from \"../utils/axios\";\r\n\r\nexport default function FollowButton({user}){\r\n    let [isFollowing, setIsFollowing] = useState(false)\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user,\r\n    }))\r\n\r\n    useEffect(() => {\r\n        if(loggedUser.following.indexOf(user) !== -1){\r\n            setIsFollowing(true)\r\n        } else setIsFollowing(false)\r\n    }, [user])\r\n\r\n    function follow(){\r\n        axiosInstance.post('pinterestAccounts/follow/', {'username': user.username})\r\n            .then(()=>setIsFollowing(true))\r\n            .catch((e)=>console.log(e))\r\n    }\r\n    function unfollow(){\r\n        axiosInstance.post('pinterestAccounts/unfollow/', {'username': user.username})\r\n            .then(()=>setIsFollowing(false))\r\n            .catch((e)=>console.log(e))\r\n    }\r\n\r\n    if(isFollowing){\r\n        return <SecondaryButton onClick={unfollow} className=\"px-4 py-2 rounded-3xl ml-auto \">팔로잉중</SecondaryButton>\r\n    }\r\n    else{\r\n        return <SecondaryButton onClick={follow} className=\"px-4 py-2 rounded-3xl ml-auto \">팔로우하기</SecondaryButton>\r\n    }\r\n}","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pin.js",["237","238","239","240"],"import React, {useEffect, useState} from 'react'\r\nimport Layout from \"../../components/Layout\";\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Tabs from \"../../components/Tab\";\r\nimport PostList from \"../../components/PostList\";\r\nimport FollowButton from \"../../components/FollowButton\";\r\nimport UserSignature from \"../../components/UserSignature\";\r\nimport {axiosInstance} from \"../../utils/axios\";\r\n\r\nexport default function Pin(props) {\r\n    let pinNum = props.match.params.key1;\r\n    const {loggedUser} = useSelector(state => ({\r\n        loggedUser: state.userReducer.user,\r\n    }))\r\n    let [pinData, setPinData] = useState([]);\r\n    let [userData, setUserData] = useState([]);\r\n\r\n    function getData() {\r\n        axiosInstance.get(`/pins/${pinNum}`)\r\n            .then((res) => {\r\n                setPinData(res.data);\r\n                axiosInstance.get(`/pinterestAccounts/user/${res.data.author}/`).then((res) =>{\r\n                    const image_root_data = res.data.avatar? 'http://localhost:8000' + res.data.avatar : '';\r\n                    res.data.avatar = image_root_data;\r\n                    setUserData(res.data);\r\n                }).catch((e) => console.log(e.response))\r\n            }).catch((e)=>console.log(e.response))\r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n    }, [pinNum])\r\n    return (\r\n        <Layout props={props}>\r\n            <div className=\"md:container mx-auto max-w-lg\">\r\n                <div className=\"overflow-hidden shadow-lg rounded-3xl bg-white\">\r\n                    <div className=\"flex flex-wrap\">\r\n                        <div className=\"w-full md:w-1/2\">\r\n                                <img className=\"h-screen\" src={pinData.image} sizes={\"max-height: 400px\"} />\r\n                        </div>\r\n                        <div className=\"p-5 pl-10 w-full md:w-1/2\">\r\n                            {/*<div className=\"flex items-center justify-between\">*/}\r\n\r\n                            {/*    { pinSaved ? (*/}\r\n                            {/*        <div className=\"rounded-xl bg-gray-300 px-4 py-2\">Saved to <b>{boardTarget.name}</b></div>*/}\r\n                            {/*    ) : (*/}\r\n                            {/*        <BoardSelector pin={pinData} onSave={onSave}/>*/}\r\n                            {/*    )}*/}\r\n                            {/*</div>*/}\r\n                            <div className=\"pr-5\">\r\n                                <h1 className=\"text-4xl font-bold\">{pinData.title}</h1>\r\n                                {/*<p>{pinData.description}</p>*/}\r\n                                <div className=\"flex justify-between my-2\">\r\n                                    { pinData.author &&\r\n                                    <>\r\n                                        <UserSignature user={userData} includeFollowers />\r\n                                        {  pinData.author.username != loggedUser.username &&\r\n                                        <>\r\n                                            <FollowButton user={userData} />\r\n                                        </>\r\n                                        }\r\n                                    </>\r\n                                    }\r\n                                </div>\r\n                                <Tabs />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h2 className=\"font-bold text-center mt-10 text-xl\">More like this</h2>\r\n                <PostList filters={`ordering=-created_at`} />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\components\\Tab.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\UserSignature.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\ProfilePicture.js",["241"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ProfilePicture({user, size}) {\r\n    if(user.avatar){\r\n        return(\r\n            <Link to={`/profile/${user.username}`}>\r\n                <img src={user.avatar} className=\"rounded-full\"\r\n                style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}/>\r\n            </Link>\r\n        )\r\n    }\r\n    else if(user.username){\r\n        const firstLetter = user.username[0]\r\n        return(\r\n            <Link to={`/profile/${user.username}`}>\r\n                <div className=\"rounded-full bg-gray-300 font-bold grid place-items-center\" style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}>\r\n                    {firstLetter}\r\n                </div>\r\n            </Link>\r\n        )\r\n    }\r\n    return (\r\n        <Link to={`/profile/${user.username}`}>\r\n            <div className=\"rounded-full bg-gray-300 font-bold grid place-items-center\" style={{width: size*1.8+\"em\", height: size*1.8+\"em\"}}>\r\n                U\r\n            </div>\r\n        </Link>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\pages\\pin\\pinCreate.js",["242"],"import {useSelector} from \"react-redux\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/Card\";\r\nimport {useRef, useState} from \"react\";\r\n\r\nexport default function PinCreate(props){\r\n    const {token} = useSelector(state => ({\r\n        token: state.userReducer.token,\r\n    }))\r\n    const history = useHistory()\r\n    const fileInputRef = useRef()\r\n    const apiRoot = 'http://localhost:8000/pins/'\r\n    let[title, setTitle] = useState('')\r\n    let[image, setImage] = useState('')\r\n    let[imageURL, setImageURL] = useState('')\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        const formData = new FormData();\r\n        formData.append('title', title)\r\n        formData.append('image', image)\r\n\r\n        async function fn() {\r\n            try {\r\n                const headers = {Authorization: `JWT ${token}`}\r\n                const response = await axios.post(apiRoot, formData, {headers})\r\n                const {data} = response\r\n                history.push(`pin/${data.id}`)\r\n            }\r\n            catch (err) { console.log(err.response)}\r\n        }\r\n        fn();\r\n    }\r\n    const handleChange = (e) => {\r\n        setImage(e.target.files[0])\r\n        setImageURL(URL.createObjectURL(e.target.files[0]))\r\n    }\r\n    return (\r\n        <Layout props={props}>\r\n            <div className=\"bg-gray-200\">\r\n                <div className=\"max-w-screen-md py-10 mx-auto\">\r\n                    <Card>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"p-10\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <button className=\"font-bold text-white px-4 py-2 rounded-r-lg\" style={{backgroundColor: '#E60023'}}>저장</button>\r\n                                </div>\r\n                                <div className=\"flex flex-wrap mt-5\">\r\n                                    <div className=\"flex flex-col w-full sm:w-1/2\">\r\n                                        { !imageURL &&\r\n                                        <div className=\"bg-gray-300 w-64 rounded-lg p-2 flex-grow w-full cursor-pointer\" onClick={() => fileInputRef.current.click()}>\r\n                                            <div className=\"rounded-lg border-2 border-gray-400 border-dashed h-full relative\">\r\n                                                <div className=\"text-center mx-auto\" style={{marginTop: \"50%\", minHeight: \"15rem\"}}>\r\n                                                    <div className=\"my-2\">드래그하거나 클릭하여 업로드</div>\r\n                                                </div>\r\n                                                <div className=\"absolute text-sm bottom-0 text-center\">권장사항 : 20MB 이하 고화질 원본 .jpg 파일</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        }\r\n                                        { imageURL &&\r\n                                        <img src={imageURL} />\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"sm:px-10 py-5 w-full sm:w-1/2\" style={{minHeight: \"510px\"}}>\r\n                                        <input ref={fileInputRef} type=\"file\" className=\"hidden\" onChange={handleChange}/>\r\n                                        <input onChange={e => setTitle(e.target.value)} value={title} className=\"outline-none border-b focus:border-blue-500 focus:border-b-2 w-full py-2 text-3xl font-bold\" placeholder=\"제목 추가\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","C:\\1234\\Pinterest\\frontend\\src\\pages\\account\\settings\\index.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\PrimaryButton.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\SecondaryButton.js",[],["243","244"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardCreateModal.js",["245"],"C:\\1234\\Pinterest\\frontend\\src\\utils\\axios.js",["246"],"import axios from 'axios'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nlet item, token\r\nif(localStorage.getItem(('persist:userReducer'))) {\r\n    item = JSON.parse(localStorage.getItem('persist:userReducer')).userReducer\r\n// console.log(token[\"userReducer\"])\r\n    token = item.split('\"')[3]\r\n}\r\n\r\n\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: 'http://localhost:8000/',\r\n    headers: token? {Authorization: `JWT ${token}`} : ''\r\n})\r\n","C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\Board.js",["247","248","249"],"C:\\1234\\Pinterest\\frontend\\src\\components\\Button\\BaseButton.js",[],"C:\\1234\\Pinterest\\frontend\\src\\components\\Board\\BoardsFeed.js",["250","251"],"import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction getBoardDisplayImage(board){\r\n    if(board.pin.length >= 1)\r\n        return board.pin[0].image\r\n    return 123\r\n}\r\n\r\nexport default function BoardsFeed({ boards, username }){\r\n    return (\r\n        <div className=\"flex flex-wrap\">\r\n\r\n            {boards && boards.map((board, index) => (\r\n                <div key={index} className=\"mx-5\">\r\n                    <div>\r\n                        <Link to={`${username}/${board.title}/`}>\r\n                            <div className=\"rounded-xl overflow-hidden bg-gray-300 w-64 h-32\" >\r\n                                <img className=\"w-full\" src={getBoardDisplayImage(board)} />\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                    <div href={`/${username}/${board.id}`}><a><h3 className=\"text-xl font-bold\">{board.title}</h3></a></div>\r\n                    <div>{board.pin.length} pins</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n",{"ruleId":"252","severity":1,"message":"253","line":8,"column":7,"nodeType":"254","messageId":"255","endLine":8,"endColumn":14},{"ruleId":"252","severity":1,"message":"256","line":4,"column":9,"nodeType":"254","messageId":"255","endLine":4,"endColumn":20},{"ruleId":"257","severity":1,"message":"258","line":16,"column":8,"nodeType":"259","endLine":16,"endColumn":10,"suggestions":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"252","severity":1,"message":"265","line":4,"column":9,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":68,"column":17,"nodeType":"268","endLine":68,"endColumn":126},{"ruleId":"252","severity":1,"message":"269","line":2,"column":9,"nodeType":"254","messageId":"255","endLine":2,"endColumn":20},{"ruleId":"252","severity":1,"message":"270","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":13},{"ruleId":"252","severity":1,"message":"265","line":4,"column":9,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"271","line":9,"column":11,"nodeType":"254","messageId":"255","endLine":9,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":81,"column":17,"nodeType":"268","endLine":81,"endColumn":126},{"ruleId":"252","severity":1,"message":"272","line":7,"column":9,"nodeType":"254","messageId":"255","endLine":7,"endColumn":20},{"ruleId":"252","severity":1,"message":"273","line":8,"column":8,"nodeType":"254","messageId":"255","endLine":8,"endColumn":19},{"ruleId":"252","severity":1,"message":"274","line":10,"column":9,"nodeType":"254","messageId":"255","endLine":10,"endColumn":28},{"ruleId":"252","severity":1,"message":"275","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":15},{"ruleId":"252","severity":1,"message":"276","line":1,"column":16,"nodeType":"254","messageId":"255","endLine":1,"endColumn":22},{"ruleId":"252","severity":1,"message":"277","line":1,"column":9,"nodeType":"254","messageId":"255","endLine":1,"endColumn":14},{"ruleId":"252","severity":1,"message":"278","line":1,"column":16,"nodeType":"254","messageId":"255","endLine":1,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":11,"column":1,"nodeType":"281","endLine":44,"endColumn":2},{"ruleId":"252","severity":1,"message":"282","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":15},{"ruleId":"279","severity":1,"message":"283","line":17,"column":1,"nodeType":"281","endLine":21,"endColumn":2},{"ruleId":"261","replacedBy":"284"},{"ruleId":"263","replacedBy":"285"},{"ruleId":"252","severity":1,"message":"286","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":14},{"ruleId":"252","severity":1,"message":"256","line":10,"column":9,"nodeType":"254","messageId":"255","endLine":10,"endColumn":20},{"ruleId":"261","replacedBy":"287"},{"ruleId":"263","replacedBy":"288"},{"ruleId":"252","severity":1,"message":"289","line":1,"column":16,"nodeType":"254","messageId":"255","endLine":1,"endColumn":22},{"ruleId":"252","severity":1,"message":"270","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":13},{"ruleId":"252","severity":1,"message":"271","line":10,"column":11,"nodeType":"254","messageId":"255","endLine":10,"endColumn":18},{"ruleId":"252","severity":1,"message":"290","line":14,"column":11,"nodeType":"254","messageId":"255","endLine":14,"endColumn":18},{"ruleId":"252","severity":1,"message":"291","line":16,"column":18,"nodeType":"254","messageId":"255","endLine":16,"endColumn":34},{"ruleId":"266","severity":1,"message":"267","line":70,"column":17,"nodeType":"268","endLine":70,"endColumn":126},{"ruleId":"252","severity":1,"message":"292","line":1,"column":16,"nodeType":"254","messageId":"255","endLine":1,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":17,"column":29,"nodeType":"268","endLine":17,"endColumn":70},{"ruleId":"261","replacedBy":"293"},{"ruleId":"263","replacedBy":"294"},{"ruleId":"252","severity":1,"message":"295","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":17},{"ruleId":"261","replacedBy":"296"},{"ruleId":"263","replacedBy":"297"},{"ruleId":"252","severity":1,"message":"298","line":3,"column":9,"nodeType":"254","messageId":"255","endLine":3,"endColumn":15},{"ruleId":"252","severity":1,"message":"299","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"300","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":22},{"ruleId":"252","severity":1,"message":"301","line":15,"column":12,"nodeType":"254","messageId":"255","endLine":15,"endColumn":16},{"ruleId":"252","severity":1,"message":"302","line":19,"column":11,"nodeType":"254","messageId":"255","endLine":19,"endColumn":19},{"ruleId":"252","severity":1,"message":"303","line":2,"column":15,"nodeType":"254","messageId":"255","endLine":2,"endColumn":25},{"ruleId":"252","severity":1,"message":"269","line":3,"column":9,"nodeType":"254","messageId":"255","endLine":3,"endColumn":20},{"ruleId":"257","severity":1,"message":"304","line":30,"column":7,"nodeType":"259","endLine":30,"endColumn":9,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":37,"column":34,"nodeType":"308","messageId":"309","endLine":37,"endColumn":36},{"ruleId":"306","severity":1,"message":"310","line":64,"column":36,"nodeType":"308","messageId":"309","endLine":64,"endColumn":38},{"ruleId":"306","severity":1,"message":"307","line":71,"column":45,"nodeType":"308","messageId":"309","endLine":71,"endColumn":47},{"ruleId":"266","severity":1,"message":"267","line":57,"column":37,"nodeType":"268","endLine":57,"endColumn":112},{"ruleId":"252","severity":1,"message":"311","line":1,"column":8,"nodeType":"254","messageId":"255","endLine":1,"endColumn":13},{"ruleId":"252","severity":1,"message":"299","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"257","severity":1,"message":"312","line":18,"column":8,"nodeType":"259","endLine":18,"endColumn":14,"suggestions":"313"},{"ruleId":"252","severity":1,"message":"299","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":13},{"ruleId":"257","severity":1,"message":"314","line":32,"column":8,"nodeType":"259","endLine":32,"endColumn":16,"suggestions":"315"},{"ruleId":"266","severity":1,"message":"267","line":39,"column":33,"nodeType":"268","endLine":39,"endColumn":109},{"ruleId":"306","severity":1,"message":"310","line":57,"column":68,"nodeType":"308","messageId":"309","endLine":57,"endColumn":70},{"ruleId":"266","severity":1,"message":"267","line":8,"column":17,"nodeType":"268","endLine":9,"endColumn":72},{"ruleId":"266","severity":1,"message":"267","line":62,"column":41,"nodeType":"268","endLine":62,"endColumn":63},{"ruleId":"261","replacedBy":"316"},{"ruleId":"263","replacedBy":"317"},{"ruleId":"252","severity":1,"message":"318","line":18,"column":20,"nodeType":"254","messageId":"255","endLine":18,"endColumn":24},{"ruleId":"252","severity":1,"message":"256","line":2,"column":9,"nodeType":"254","messageId":"255","endLine":2,"endColumn":20},{"ruleId":"252","severity":1,"message":"319","line":11,"column":10,"nodeType":"254","messageId":"255","endLine":11,"endColumn":16},{"ruleId":"252","severity":1,"message":"320","line":11,"column":18,"nodeType":"254","messageId":"255","endLine":11,"endColumn":27},{"ruleId":"257","severity":1,"message":"321","line":24,"column":8,"nodeType":"259","endLine":24,"endColumn":10,"suggestions":"322"},{"ruleId":"266","severity":1,"message":"267","line":19,"column":33,"nodeType":"268","endLine":19,"endColumn":93},{"ruleId":"323","severity":1,"message":"324","line":23,"column":60,"nodeType":"268","endLine":23,"endColumn":63},"no-unused-vars","'apiRoot' is assigned a value but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["325"],"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'Axios' is defined but never used.","'history' is assigned a value but never used.","'createStore' is defined but never used.","'RootReducer' is defined but never used.","'composeWithDevTools' is defined but never used.","'Profile' is defined but never used.","'SIGNUP' is defined but never used.","'login' is defined but never used.","'logout' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'hardSet' is defined but never used.","Assign arrow function to a variable before exporting as module default",["326"],["327"],"'Layout' is defined but never used.",["326"],["327"],"'useRef' is defined but never used.","'onLogin' is assigned a value but never used.","'loginRedirectUrl' is assigned a value but never used.","'useState' is defined but never used.",["326"],["327"],"'SearchBar' is defined but never used.",["326"],["327"],"'update' is defined but never used.","'axios' is defined but never used.","'ProfilePicture' is defined but never used.","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["328"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'React' is defined but never used.","React Hook useEffect has a missing dependency: 'loggedUser.following'. Either include it or remove the dependency array.",["329"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["330"],["326"],["327"],"'data' is assigned a value but never used.","'isUsed' is assigned a value but never used.","'setIsUsed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loggedUser.username' and 'userBoard'. Either include them or remove the dependency array.",["331"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"332","fix":"333"},"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [filter]",{"range":"342","text":"343"},"Update the dependencies array to be: [username]",{"range":"344","text":"345"},"Update the dependencies array to be: [loggedUser.following, user]",{"range":"346","text":"347"},"Update the dependencies array to be: [getData, pinNum]",{"range":"348","text":"349"},"Update the dependencies array to be: [loggedUser.username, userBoard]",{"range":"350","text":"351"},[538,540],"[filter]",[1450,1452],"[username]",[615,621],"[loggedUser.following, user]",[1330,1338],"[getData, pinNum]",[930,932],"[loggedUser.username, userBoard]"]